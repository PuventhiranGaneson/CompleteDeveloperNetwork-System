@page
@model CompleteDeveloperNetwork_System.Pages.IndexModel
@{
    ViewData["Title"] = "Developers";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />

<style>
    body {
        background: linear-gradient(135deg, #74ebd5 0%, #ACB6E5 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding: 30px;
    }

    .page-title {
        text-align: center;
        color: #2c3e50;
        margin-bottom: 30px;
        font-weight: bold;
        animation: fadeIn 0.6s ease-in-out;
    }

    .table-container {
        background: #fff;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        animation: fadeIn 0.7s ease-in-out;
    }

    table th {
        background: #2c3e50;
        color: #fff;
        text-align: center;
        font-weight: 600;
    }

    table td {
        vertical-align: middle;
        text-align: center;
    }

    .btn-custom {
        background: #2c3e50;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-custom:hover {
            background: #1a242f;
            transform: scale(1.05);
        }

    /* @keyframes fadeIn {
        from{

    
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    } */
</style>

<h1 class="page-title">Developers</h1>

<div class="d-flex justify-content-end mb-3">
    <button onclick="location.href='/Create'" class="btn btn-custom">➕ Add Developer</button>
</div>

<div class="table-container">
    <table class="table table-striped table-hover align-middle">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Skillsets</th>
                <th>Hobbies</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="devTable"></tbody>
    </table>
</div>

@section Scripts {
    <script>
        async function loadDevelopers() {
            const res = await fetch('/api/developer');
            const devs = await res.json();
            let rows = '';
            devs.forEach(d => {
                rows += `<tr>
                            <td><strong>${d.username}</strong></td>
                            <td>${d.email}</td>
                            <td>${d.phoneNumber}</td>
                            <td>${d.skillsets && d.skillsets.length ? d.skillsets.join(", ") : "-"}</td>
                            <td>${d.hobbies && d.hobbies.length ? d.hobbies.join(", ") : "-"}</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="deleteDev(${d.id})">🗑 Delete</button>
                            </td>
                         </tr>`;
            });
            document.getElementById("devTable").innerHTML = rows;
        }

        async function deleteDev(id) {
            if (!confirm("Delete this developer?")) return;
            await fetch(`/api/developer/${id}`, { method: "DELETE" });
            loadDevelopers();
        }

        loadDevelopers();
    </script>
}
